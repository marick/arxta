--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: 
- !ruby/object:RI::MethodSummary 
  name: included
comment: 
- !ruby/struct:SM::Flow::P 
  body: Scaffold image models utilizing thumbnailing and Ramaze integration. Resizing is done by ImageScience.
- !ruby/struct:SM::Flow::P 
  body: "Usage:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Avatar &lt; Sequel::Model\n    IMAGE = {\n      # specifies many_to_one, will create relation and foreign key\n\n      :owner =&gt; :User,\n\n      # Remove original and thumbnails on Avatar#destroy\n\n      :cleanup =&gt; true,\n\n      # Algorithm to use in ImageScience\n      #\n      # * resize(width, height)\n      #     Resizes the image to <tt>width</tt> and <tt>height</tt> using a cubic-bspline\n      #     filter.\n      #\n      # * thumbnail(size)\n      #     Creates a proportional thumbnail of the image scaled so its\n      #     longest edge is resized to <tt>size</tt>.\n      #\n      # * cropped_thumbnail(size)\n      #     Creates a square thumbnail of the image cropping the longest edge\n      #     to match the shortest edge, resizes to <tt>size</tt>.\n\n      :algorithm =&gt; :thumbnail,\n\n      # Key specifies the filename and accessors, value are arguments to the\n      # algorithm\n\n      :sizes =&gt; {\n        :small =&gt; 150,\n        :medium =&gt; 300,\n        :large =&gt; 600\n      }\n    }\n\n    # Perform the scaffold\n    include SequelImage\n  end\n"
constants: []

full_name: SequelImage
includes: []

instance_methods: []

name: SequelImage
superclass: 

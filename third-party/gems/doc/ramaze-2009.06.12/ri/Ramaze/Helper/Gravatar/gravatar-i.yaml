--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: API to build gravatar URIs from an email address (or any other String).
- !ruby/struct:SM::Flow::P 
  body: "@example Simple usage"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Gravatars &lt; Ramaze::Controller\n    helper :gravatar\n\n    def index\n      %q(\n      Input your email address and I'll show you your Gravatar\n      &lt;form&gt;\n        &lt;input type=&quot;text&quot; name=&quot;email&quot; /&gt;\n        &lt;input type=&quot;submit&quot; /&gt;\n      &lt;/form&gt;\n      &lt;?r if email = request[:email] ?&gt;\n        Your gravatar is:\n        &lt;img src=&quot;#{gravatar(email)}&quot; /&gt;\n      &lt;?r end ?&gt;\n      )\n    end\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "@option opts [#to_s] :ext (nil)"
- !ruby/struct:SM::Flow::VERB 
  body: "  append a filename extension for the image, like '.jpg'\n"
- !ruby/struct:SM::Flow::P 
  body: "@option opts [#to_i] :size (80)"
- !ruby/struct:SM::Flow::VERB 
  body: "  The size of the gravatar, square, so 80 is 80x80.\n  Allowed range is from 1 to 512.\n"
- !ruby/struct:SM::Flow::P 
  body: "@option opts [#to_s] :rating ('g')"
- !ruby/struct:SM::Flow::VERB 
  body: "  Only serve a gravatar if it has a content rating equal or below the\n  one specified. Ratings, in order are: 'g', 'pg', 'r', or 'x'\n"
- !ruby/struct:SM::Flow::P 
  body: "@option opts [#to_s] :default (nil)"
- !ruby/struct:SM::Flow::VERB 
  body: "  Fall back to default if the given <tt>email</tt> doesn't have an gravatar;\n  may be an absolute url, 'identicon', 'monsterid', or 'wavatar'\n"
- !ruby/struct:SM::Flow::P 
  body: "@options opts [true, false] :force (false)"
- !ruby/struct:SM::Flow::VERB 
  body: "  Force use of the default avatar, useful if you want to use only\n  identicons or the like\n"
- !ruby/struct:SM::Flow::P 
  body: "@param [#to_str] email"
- !ruby/struct:SM::Flow::P 
  body: "@return [URI]"
- !ruby/struct:SM::Flow::P 
  body: "@see http://en.gravatar.com/site/implement/url @author manveru"
full_name: Ramaze::Helper::Gravatar#gravatar
is_singleton: false
name: gravatar
params: (email, opts = {})
visibility: public

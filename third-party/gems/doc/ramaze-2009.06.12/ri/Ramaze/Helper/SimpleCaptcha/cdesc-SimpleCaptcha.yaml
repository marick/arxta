--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Produce very simple question/answer pairs.
- !ruby/struct:SM::Flow::P 
  body: The default is a trivial mathematical problem.
- !ruby/struct:SM::Flow::P 
  body: "Usage (trait is optional):"
- !ruby/struct:SM::Flow::VERB 
  body: "  class RegisterController &lt; Ramaze::Controller\n    trait :captcha =&gt; lambda{\n      [&quot;the answer to everything&quot;, &quot;42&quot;]\n    }\n\n    def index\n      %(\n        &lt;form action=&quot;#{r(:answer}&quot;&gt;\n          What is #{simple_captcha}?\n          &lt;input type=&quot;text&quot; name=&quot;answer&quot; /&gt;&quot;\n          &lt;input type=&quot;submit&quot; /&gt;\n        &lt;/form&gt;\n      ).strip\n    end\n\n    def answer\n      check_captcha(request[:answer])\n    end\n  end\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: NUMBERS
  value: "[5, 10, 15, 20]"
full_name: Ramaze::Helper::SimpleCaptcha
includes: 
- !ruby/object:RI::IncludedModule 
  name: Ramaze::Traited
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: check_captcha
- !ruby/object:RI::MethodSummary 
  name: simple_captcha
name: SimpleCaptcha
superclass: 

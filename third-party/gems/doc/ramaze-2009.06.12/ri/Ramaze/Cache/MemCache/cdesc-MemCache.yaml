--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Cache based on the memcache library which utilizes the memcache-daemon to store key/value pairs in namespaces.
- !ruby/struct:SM::Flow::P 
  body: Please read the documentation of memcache-client for further methods.
- !ruby/struct:SM::Flow::P 
  body: It is highly recommended to install memcache-client_extensions for a bit of speedup and more functionality
- !ruby/struct:SM::Flow::P 
  body: "NOTE: There is a big issue with persisting sessions in memcache, not only"
- !ruby/struct:SM::Flow::VERB 
  body: "      can they be dropped at any time, essentially logging the user out\n      without them noticing, but there is also a low limit to the maximum\n      time-to-live. After 30 days, your session will be dropped, no\n      matter what.\n      Please remember that memcache is, first of all, a cache, not a\n      persistence mechanism.\n"
- !ruby/struct:SM::Flow::P 
  body: "NOTE: If you try to set a higher ttl than allowed, your stored key/value"
- !ruby/struct:SM::Flow::VERB 
  body: "      will be expired immediately.\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: MAX_TTL
  value: "2592000"
- !ruby/object:RI::Constant 
  comment: 
  - !ruby/struct:SM::Flow::P 
    body: "+:multithread+: May be turned off at your own risk."
  - !ruby/struct:SM::Flow::VERB 
    body: "   +:readonly+: You most likely want that to be false.\n    +:servers+: Array containing at least one of:\n                MemCache::Server instance\n                Strings like &quot;localhost&quot;, &quot;localhost:11211&quot;, &quot;localhost:11211:1&quot;\n                That accord to &quot;host:port:weight&quot;, only host is required.\n"
  name: OPTIONS
  value: "{         :multithread => true,         :readonly    => false,         :servers     => ['localhost:11211:1'],       }"
full_name: Ramaze::Cache::MemCache
includes: 
- !ruby/object:RI::IncludedModule 
  name: Cache::API
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: cache_clear
- !ruby/object:RI::MethodSummary 
  name: cache_delete
- !ruby/object:RI::MethodSummary 
  name: cache_fetch
- !ruby/object:RI::MethodSummary 
  name: cache_setup
- !ruby/object:RI::MethodSummary 
  name: cache_store
- !ruby/object:RI::MethodSummary 
  name: compression
- !ruby/object:RI::MethodSummary 
  name: compression=
- !ruby/object:RI::MethodSummary 
  name: method_missing
- !ruby/object:RI::MethodSummary 
  name: namespace
- !ruby/object:RI::MethodSummary 
  name: namespace=
- !ruby/object:RI::MethodSummary 
  name: stats
name: MemCache
superclass: Object

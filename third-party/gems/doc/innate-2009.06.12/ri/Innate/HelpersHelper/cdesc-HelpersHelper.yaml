--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: Here come the utility methods used from the HelperAccess#helper method, we do this to keep method count at a minimum and because HelpersHelper is such an awesome name that just can't be wasted.
- !ruby/struct:SM::Flow::P 
  body: "Usage if you want to only extend with helpers:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Hi\n    Innate::HelpersHelper.each_extend(self, :cgi, :link, :aspect)\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "Usage if you only want to include helpers:"
- !ruby/struct:SM::Flow::VERB 
  body: "  class Hi\n    Innate::HelpersHelper.each_include(self, :cgi, :link, :aspect)\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "Usage for iteration:"
- !ruby/struct:SM::Flow::VERB 
  body: "  Innate::HelpersHelper.each(:cgi, :link, :aspect) do |mod|\n    p mod\n  end\n"
- !ruby/struct:SM::Flow::P 
  body: "Usage for translating helpers to modules:"
- !ruby/struct:SM::Flow::VERB 
  body: "  p Innate::HelpersHelper.each(:cgi, :link, :aspect)\n"
constants: 
- !ruby/object:RI::Constant 
  comment: 
  name: EXTS
  value: "%w[rb so bundle]"
full_name: Innate::HelpersHelper
includes: 
- !ruby/object:RI::IncludedModule 
  name: Optioned
instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: each
- !ruby/object:RI::MethodSummary 
  name: each_extend
- !ruby/object:RI::MethodSummary 
  name: each_include
- !ruby/object:RI::MethodSummary 
  name: find_helper
- !ruby/object:RI::MethodSummary 
  name: get
- !ruby/object:RI::MethodSummary 
  name: try_require
name: HelpersHelper
superclass: 

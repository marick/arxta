--- !ruby/object:RI::MethodDescription 
aliases: []

block_params: 
comment: 
- !ruby/struct:SM::Flow::P 
  body: Answer with a hash, keys are method names, values are method arities.
- !ruby/struct:SM::Flow::P 
  body: Note that this will be executed once for every request, once we have settled things down a bit more we can switch to update based on Reloader hooks and update once on startup. However, that may cause problems with dynamically created methods, so let's play it safe for now.
- !ruby/struct:SM::Flow::P 
  body: "@example"
- !ruby/struct:SM::Flow::VERB 
  body: "  Hi.update_method_arities\n  # =&gt; {'index' =&gt; 0, 'foo' =&gt; -1, 'bar =&gt; 2}\n"
- !ruby/struct:SM::Flow::P 
  body: "@api internal @see Node#resolve @return [Hash] mapping the name of the methods to their arity"
full_name: Innate::Node#update_method_arities
is_singleton: false
name: update_method_arities
params: ()
visibility: public

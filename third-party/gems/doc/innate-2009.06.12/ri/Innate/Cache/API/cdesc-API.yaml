--- !ruby/object:RI::ClassDescription 
attributes: []

class_methods: []

comment: 
- !ruby/struct:SM::Flow::P 
  body: This is the API every Cache has to conform to.
- !ruby/struct:SM::Flow::P 
  body: The default behaviour is tailored for the Memory cache, override any behaviour as you need.
- !ruby/struct:SM::Flow::P 
  body: <tt>key</tt> may be a String or Symbol <tt>value</tt> is a Hash of serializable (as according to Marshal) objects
- !ruby/struct:SM::Flow::P 
  body: "Every cache instance has to respond to:"
- !ruby/struct:SM::Flow::VERB 
  body: "  ::new()\n  #cache_setup(hostname, username, appname, cachename)\n  #cache_clear()\n  #cache_delete(*keys)\n  #cache_fetch(key, default = nil)\n  #cache_store(key, value, options = {})\n"
- !ruby/struct:SM::Flow::P 
  body: We are prefixing cache_ to make the intent clear and implementation easier, as there may be existing behaviour associated with the non-prefixed version.
- !ruby/struct:SM::Flow::P 
  body: Also note that we create one instance per cache name-space.
constants: []

full_name: Innate::Cache::API
includes: []

instance_methods: 
- !ruby/object:RI::MethodSummary 
  name: cache_clear
- !ruby/object:RI::MethodSummary 
  name: cache_delete
- !ruby/object:RI::MethodSummary 
  name: cache_fetch
- !ruby/object:RI::MethodSummary 
  name: cache_setup
- !ruby/object:RI::MethodSummary 
  name: cache_store
name: API
superclass: 
